name: Deploy Next.js Portfolio to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-pm
        run: |
          if [ -f "pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=pnpm" >> $GITHUB_OUTPUT
          elif [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx" >> $GITHUB_OUTPUT
          fi

      - name: Install pnpm
        if: steps.detect-pm.outputs.manager == 'pnpm'
        run: npm install -g pnpm@latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-pm.outputs.manager }}

      - name: Configure Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/lock.yaml', '**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install dependencies
        run: ${{ steps.detect-pm.outputs.manager }} ${{ steps.detect-pm.outputs.command }}

      - name: Build project
        run: ${{ steps.detect-pm.outputs.runner }} next build

      # REMOVE THIS EXPORT STEP COMPLETELY
      # - name: Export static site
      #   run: ${{ steps.detect-pm.outputs.runner }} next export

      - name: Handle 404 for client-side routing
        run: |
          if [ ! -f out/404.html ]; then
            cp out/index.html out/404.html
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
